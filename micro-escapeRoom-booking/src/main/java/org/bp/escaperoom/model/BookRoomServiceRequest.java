/*
 * Travel mircro service
 * Micro service to book a escaperoom
 *
 * OpenAPI spec version: 1.0.0
 * Contact: supportm@bp.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.bp.escaperoom.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * BookRoomServiceRequest
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-12-06T08:44:40.322365400+01:00[Europe/Warsaw]")
public class BookRoomServiceRequest {
  @JsonProperty("person")
  private Person person = null;

  @JsonProperty("roomService")
  private RoomService roomService = null;

  public BookRoomServiceRequest person(Person person) {
    this.person = person;
    return this;
  }

   /**
   * Get person
   * @return person
  **/

  public Person getPerson() {
    return person;
  }

  public void setPerson(Person person) {
    this.person = person;
  }

  public BookRoomServiceRequest roomService(RoomService roomService) {
    this.roomService = roomService;
    return this;
  }

   /**
   * Get roomService
   * @return roomService
  **/

  public RoomService getRoomService() {
    return roomService;
  }

  public void setRoomService(RoomService roomService) {
    this.roomService = roomService;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BookRoomServiceRequest bookRoomServiceRequest = (BookRoomServiceRequest) o;
    return Objects.equals(this.person, bookRoomServiceRequest.person) &&
        Objects.equals(this.roomService, bookRoomServiceRequest.roomService);
  }

  @Override
  public int hashCode() {
    return Objects.hash(person, roomService);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BookRoomServiceRequest {\n");
    
    sb.append("    person: ").append(toIndentedString(person)).append("\n");
    sb.append("    roomService: ").append(toIndentedString(roomService)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
